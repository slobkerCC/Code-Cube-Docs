{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to Code Cube Documentation!","text":"<p>Welcome to the official documentation hub for Code Cube. Here, you'll find comprehensive guides, tutorials, and reference materials to help you make the most out of our products and services.</p>"},{"location":"#tag-monitoring","title":"Tag Monitoring","text":"<p>Explore how to configure and manage your tag monitoring setup with Code Cube:</p> <ul> <li>\u2692\ufe0f Configuration - Client-side: Learn how to configure client-side error monitoring.</li> <li>\u2692\ufe0f Configuration - Server-side: Configure server-side error monitoring for your applications.</li> <li>Bulk Editing Tags in GTM: Learn how to perform bulk editing of tags in Google Tag Manager.</li> <li>Enabling Tag Inactivity: Discover how to enable tag inactivity monitoring to optimize tag performance.</li> <li>Offload to Own BigQuery Environment: Offload tag monitoring data to your own BigQuery environment for analysis.</li> <li>Consent Monitoring: Implement consent monitoring to ensure compliance with data privacy regulations.</li> <li>Server-side Error Logging: Set up server-side error logging to capture and analyze errors in your applications.</li> </ul>"},{"location":"#datalayer-guard","title":"DataLayer Guard","text":"<p>Learn how to monitor events via Tag Management with DataLayer Guard:</p> <ul> <li>Monitoring Events via Tag Manager: Utilize DataLayer Guard to monitor events efficiently through Tag Manager integration.</li> </ul>"},{"location":"#contact-us","title":"Contact Us","text":"<p>Have questions or feedback? Contact our team:</p> <p>Email: support@code-cube.io</p>"},{"location":"notifications/","title":"Enable Notifications","text":""},{"location":"notifications/#configuring-monitoring-notifications","title":"Configuring Monitoring Notifications","text":"<p>To enable monitoring notifications for our products, you can access our portal and navigate to the configuration pages of each product such as Tag Monitor, Datalayer Guard or Sitespeed Monitor. From there, select your desired method of receiving notifications based on your subscription model, such as Email, Slack, or Teams. Fill in the required fields accordingly for each method. Follow the steps below accoring to your desired method:</p>"},{"location":"notifications/#email-notifications","title":"Email Notifications","text":"<ol> <li>Go to our portal and access the configuration page of the product for which you want to enable notifications.</li> <li>Activate the toggle switch to enable email updates.</li> <li>Provide the email addresses where you wish to receive the notifications.</li> </ol>"},{"location":"notifications/#slack-notifications","title":"Slack Notifications","text":"<ol> <li>Go to our portal and access the configuration page of the product for which you want to enable notifications.</li> <li>Activate the toggle switch to enable Slack updates.</li> <li>Open your Slack Workspace and copy the workspace ID by clicking on the workspace name.  </li> <li>Paste the workspace ID into the corresponding field in the configuration page and save the form.</li> <li>You will be prompted to log in to your workspace and authorize our app.</li> <li>After authorizing the app, add it to your workspace by clicking the add apps button and selecting the app.</li> <li>Invite the app to the desired channel where you want to receive the notifications by clicking on the channel name, going to the integrations tab and, adding the app.</li> </ol>"},{"location":"notifications/#teams-notifications","title":"Teams Notifications","text":"<ol> <li>Go to our portal and access the configuration page of the product for which you want to enable notifications.</li> <li>Activate the toggle switch to enable Teams updates.</li> <li>Follow these steps to create an incoming webhook for the channel where you want to receive the notifications.</li> <li>Copy the generated Webhook URL and paste it into the corresoinding field and save the form.</li> </ol>"},{"location":"datalayer-guard/events-tag-manager/","title":"Configure events via Google Tag Manager","text":"<p>The DataLayer Guard normally scrapes your website to retrieve all relevant dataLayer events. But for some events this is not possible. Therefore we developed this fallback method which can be implemented via for example Google Tag Manager.</p> <p>For example usefull for the following interactions: - Purchases - Logging in - Creating a new account - Saving or removing favourites when logged in</p>"},{"location":"datalayer-guard/events-tag-manager/#implementation-in-google-tag-manager","title":"Implementation in Google Tag Manager","text":""},{"location":"datalayer-guard/events-tag-manager/#1-create-a-new-tag","title":"1. Create a new tag","text":"<ol> <li>Add a new custom HTML tag to the container<ol> <li>Give this tag a name, for example 'Code Cube - DataLayer Guard'</li> </ol> </li> <li>Add the script below in the empty HTML tag</li> </ol> <pre><code>&lt;script&gt;\nvar data = JSON.stringify({\n  \"client_name\": \"dataset_name\",\n  \"url\": {{Page URL}},\n  \"timestamp\": Date.now(),\n  \"dataLayer\": {{JS - dataLayer}}\n});\n\nvar xhr = new XMLHttpRequest();\n\nxhr.addEventListener(\"readystatechange\", function() {\n  if(this.readyState === 4) {\n    console.log(this.responseText);\n  }\n});\n\nxhr.open(\"POST\", \"https://purchase-event-receiver-6k3dd6vtka-ew.a.run.app/\");\nxhr.setRequestHeader(\"Content-Type\", \"application/json\");\n\nxhr.send(data);\n&lt;/script&gt; \n\n</code></pre> <ol> <li>There are a couple of variables that you do need to add configure.<ol> <li>\"client_name\": Can be found in the configuration page</li> <li>url: Make sure that you have the built-in variabele \"Page URL\" enabled in your container</li> <li>dataLayer: Create a new custom javaScript variabele in your tag container<ol> <li>Give the variabele the name 'JS - dataLayer'</li> <li>Add the script below in the custom javaScript variabele</li> </ol> </li> </ol> </li> </ol> <pre><code>\nfunction(){\nvar dataLayer = JSON.stringify(window.dataLayer)\nreturn dataLayer;\n }\n\n </code></pre>"},{"location":"datalayer-guard/events-tag-manager/#2-add-the-trigger-to-the-tag","title":"2. Add the trigger to the tag","text":"<ol> <li>Add the custom event trigger to the tag based on the dataLayer event name.</li> <li>Firing the dataLayer monitor for 10% of the events is mostly enough.<ol> <li>Add the following rule: Random number ends with 1</li> </ol> </li> </ol>"},{"location":"datalayer-guard/events-tag-manager/#3-test-your-changes-in-the-preview-mode-and-publish","title":"3. Test your changes in the preview mode and publish","text":"<p>Most important is to make sure the variabele {{JS - dataLayer}} contains the right dataLayer object that you would like to monitor.</p>"},{"location":"datalayer-guard/intro/","title":"The DataLayer Guard","text":"<p>Code Cube's DataLayer Guard keeps a constant eye on your website's dataLayer. Any changes or errors within the dataLayer trigger a notification to be sent \u2013 based on preconfigured templates within the Code Cube portal. The DataLayer Guard conducts website monitoring hourly, ensuring you're always one step ahead of potential issues.  With continuous monitoring, you can identify and resolve mistakes quickly, preventing them from disrupting your data accuracy and marketing effectiveness.</p> <p>The dataLayer contains all information used to pass data from your website to Tag Manager. A broken dataLayer causes the loss of valuable marketing- and analytics data and missing out on important insights.</p> <p>Quick links</p> <ul> <li>Configuration via scraper</li> <li>Configuration via Tag Manager.</li> </ul>"},{"location":"datalayer-guard/intro/#how-does-it-work","title":"\ud83d\udd0e How does it work?","text":"<p>At Code Cube, we use two methods for dataLayer monitoring: the DataLayer Guard Scraper and integration with (Google) Tag Manager.</p>"},{"location":"datalayer-guard/intro/#monitoring-via-custom-scraper","title":"Monitoring via custom scraper","text":"<p>The DataLayer Guard acts as a scraper, continuously visiting your website, navigating through it, and performing various interactions based on predefined templates set up via the configuration page in the portal.</p> <p>Most dataLayer events can be monitored with this setup, without the need for additional configurations via frontend or Tag Management systems. This autonomy from development and external scripts is one of the setup's significant advantages.</p> <p>Within the scraper, two types of events are defined. </p> <p>Page load events: These events trigger directly upon page load, requiring no user interactions. Examples include pageview events. Once added to the configuration page, page load events are promptly inspected during the next DataLayer Guard run.</p> <p>Interaction events: These events require performing actions on the page, such as clicking on elements, filling in input fields, selecting options from a list, adding a product to the cart. Interaction events may take up to a maximum of 24 hours to be fully inspected by the DataLayer Guard.</p> <p>How to configure </p>"},{"location":"datalayer-guard/intro/#monitoring-via-google-tag-manager","title":"Monitoring via (Google) Tag Manager","text":"<p>Certain events, like those requiring user authentication, email subscriptions, or completing purchases on the website, cannot be captured through scraping. For such scenarios, we've devised a fallback method via Google Tag Manager.</p> <p>How to configure </p>"},{"location":"datalayer-guard/scraped-events/","title":"Monitoring via scraped events","text":"<p>This guide will walk you through configuring dataLayer events to be monitored by DataLayer Guard. </p>"},{"location":"datalayer-guard/scraped-events/#adding-events","title":"Adding events","text":"<p>To add events for monitoring, follow these steps:</p> <ol> <li> <p>Navigate to the DataLayer Guard configuration page.            </p> </li> <li> <p>Prepare the list of events you want to be monitored.</p> </li> <li> <p>Click on the <code>Monitoring via scraped events</code> tab.               </p> </li> <li> <p>Click on the <code>Add event</code> button.             </p> </li> <li> <p>Enter the event name in the corresponding field.      </p> </li> <li> <p>For adding the events you have two options:          </p> <p>Add the entire event in valid JSON format:                        </p> <ul> <li>Click on the <code>Add JSON</code> button and paste the entire event. The event will be displayed in the event table, enabling you to edit, add, and remove fields easily.</li> </ul> <p></p> <p>Add events field by field:                      </p> <ul> <li> <p>Enter the parameter name in the \"Parameter\" field.   </p> </li> <li> <p>Select the type of value. Note: for nested arrays or objects, select the array or object type accordingly.   </p> </li> <li>Specify if the value is required or not.   </li> <li>Determine if the value should match a specific value or if it can be dynamic.   </li> <li>Enter the value or an example of the value (if dynamic) in the \"Value\" field.   </li> <li>Click the add icon at the end of the row to add more parameters and rows.     </li> </ul> </li> <li> <p>Define how the event is triggered from the <code>How does this event fire</code> dropdown.   </p> </li> <li>Specify the URL on which the event can be found.   </li> <li>If the event is an interaction event, define the trigger element for the event.   </li> <li>Hit the save button to save the event.   </li> </ol>"},{"location":"datalayer-guard/scraped-events/#watch-the-video-below-to-learn-how-to-add-the-events","title":"Watch the video below to learn how to add the events","text":"Your browser does not support the video tag."},{"location":"notifications/slack/","title":"Slack notifications","text":"<p>Code Cube notifications can be sent through various methods, including Slack integration. This feature is beneficial as it allows you to receive real-time updates about your Tag Monitor or DataLayer Guard setup directly in your Slack channel. The following steps will guide you in linking your Code Cube configuration to your Slack account.</p> <p>You can use the same steps to configure Slack notifications for both the Tag Monitor and the DataLayer Guard. If you want to enable it for both products, please ensure to perform the steps below separately, on each product's configuration page.</p>"},{"location":"notifications/slack/#steps-to-follow","title":"Steps to Follow","text":"<ol> <li>Open the configuration page on the portal (Tag Monitor or DataLayer Guard).</li> <li> <p>Enable Slack notifications using the switch at the top of the configuration page, under the 'Slack notifications' subpage.</p> <p></p> </li> <li> <p>Fill in the two empty fields with your account details.</p> <ul> <li>Insert your workspace ID (for example: codecube.slack.com).</li> </ul> <p></p> <ul> <li>Specify the name of the Slack channel where you want to receive notifications. Note: Many users prefer to receive Slack notifications in a separate channel. If this is the case for you, make sure to create this channel in your Slack environment first.</li> </ul> </li> <li> <p>Click the bar below to authenticate the Code Cube app within your workspace. You'll be prompted to log into your workspace and authorize the Code Cube app.</p> </li> <li> <p>After granting authorization, open your Slack. Now, invite the app to the desired channel where you want to receive notifications.</p> <ul> <li> <p>Open the specific channel in Slack and click on the channel name.</p> <p></p> </li> <li> <p>Navigate to the integrations tab and select 'Add apps'.</p> </li> <li>In the search bar, look for 'Tag Error Monitoring' or 'DataLayer Guard' and select 'Add'.</li> </ul> </li> </ol>"},{"location":"site-speed-monitoring/site_speed/","title":"Site speed","text":""},{"location":"site-speed-monitoring/site_speed/#product-description","title":"Product Description","text":"<p>The Sitespeed Monitor checks the website performance by taking snapshots during the page load and collect the data of various metrics such as requests count, third party requests data, cumulative layout shift, CSS files and scripts loading time e.t.c. By the end of the checkup the overall score will be calculated to show overall performance score from 0 to 100.</p>"},{"location":"site-speed-monitoring/site_speed/#how-it-works","title":"How it works","text":"<p>To set the configuration user must fill out the configuration form on Code Cube Portal for customers.</p> <p>Steps needed for complete the implementation: 1. Select the checkup frequency (how many times per day should we run checkups) 2. Set the list of emails which should be notified about the results 3. Turn on the slack alerts as well if it's needed</p>"},{"location":"tag-monitor/a-tag-monitor/","title":"Product Description","text":""},{"location":"tag-monitor/a-tag-monitor/#product-description_1","title":"Product Description","text":"<p>This repository contains the Tag Monitor source code and terraform documents. Tag Monitor uses Google Tag Management which is a tag delivery system that allows you to quickly and easily update measurement codes and related code fragments (collectively known as tags) on a website or mobile app. Tag monitoring will allow you to understand if important tags are actually firing for real users and see when they break down in a well formatted table. </p>"},{"location":"tag-monitor/a-tag-monitor/#how-it-works","title":"How it works","text":"<p>The key deliverable of Tag monitor is a BigQuery view that collects data from a website. This is supported by a Cloud Function that collects the pixel and stores it into BigQuery. The data will be sent by way of a new Google Tag Manager custom template, and it will comprise statistics of all the tags (or a random portion of it) that have fired on the website for any given dataLayer event.</p> <p></p> <p>The basic setup of the monitor collects the following metadata from each dataLayer event: - Event name and timestamp (to uniquely distinguish events with the same name from each other). - Tag ID, name, firing status, and execution time for every tag that fired for that event (or null if no tags fired for the event).</p> <p>This solution can be easily extended to include other metadata, like container ID, domain etc.</p>"},{"location":"tag-monitor/access-to-bigquery-dataset/","title":"Access to Tag Monitor dataset(s) in BigQuery","text":"<p>\u27a1\ufe0f This feature is exclusively available in the\u00a0premium package.</p> <p>\u27a1\ufe0f This documentation presents the updated method of offloading BigQuery data to your own GCP environment. The old method involved using a scheduled query, with access managed via a service account. If you already have this setup and have questions about it, please contact support@code-cube.io.</p>"},{"location":"tag-monitor/access-to-bigquery-dataset/#introduction","title":"Introduction","text":"<p>BigQuery's Analytics Hub is used to share BigQuery data. This robust feature allows users to access and analyze shared datasets. It enables users to extract valuable insights from the data collected and shared by Code Cube. This feature is especially beneficial for data analysts and businesses looking to use shared data to make informed decisions about their tag or dataLayer insights and errors.</p> <p>Technical background</p> <p>The Analytics Hub operates on a publish and subscribe model for BigQuery datasets. Your Google Cloud Project serves as the subscriber, meaning the costs for running queries are charged to your own Google Cloud Platform. The data will be shared in real-time. You'll have read-only access to the BigQuery dataset, allowing you to read the data but not make any additions or updates to it. </p> <p>We can provide access to the following datasets:</p> <ul> <li>Access to raw Tag Monitor client-side data</li> <li>Access to raw Tag Monitor server-side data</li> </ul>"},{"location":"tag-monitor/access-to-bigquery-dataset/#steps-to-follow","title":"Steps to Follow","text":"<p>To access datasets shared by Code Cube, please follow these steps:</p> <p>1. Set up a Google Cloud Platform (GCP) project</p> <p>Navigate to the Google Cloud Platform project where you wish to store the data. If you do not already have a Google Cloud Project, create a new one (see link).</p> <p>2. Provide a Google email address</p> <p>Share the Google email address that should receive access to the shared dataset with your contact at Code Cube or via support@code-cube.io.</p> <p>We will add this account as a subscriber to the dataset listing within the Analytics Hub.</p> <p>3. Access the shared dataset</p> <p>After granting the email address access to the dataset, you will receive a data exchange link from us. Open this link (via the specific Google account) to offload the data to your own environment. </p> <p>We will let you know as soon as your Google email address has been added as a subscriber. You will receive a link to the data exchange from us. Please open this link via the represented Google account and click here on the button \u2018+ add data set to project\u2019.</p> <p></p> <p>You will be redirected to the configuration page \u2018Create linked dataset\u2019. On this page two fields are required to fill in. </p> <ul> <li>Project: Select the project where the Code Cube data should be stored.</li> <li>Linked data set name: Add the name of the dataset in BigQuery where the Code Cube data should be stored.</li> </ul> <p>4. Locate the dataset in BigQuery</p> <p>After adding the dataset to your project, you can find it in your BigQuery console. Navigate to BigQuery via the Google Cloud Platform console to view and analyse the shared dataset.</p> <p>If you encounter any issues or need further assistance, please feel free to contact us at support@code-cube.io.</p>"},{"location":"tag-monitor/cloud-run-monitoring/","title":"Cloud Run Monitoring","text":""},{"location":"tag-monitor/cloud-run-monitoring/#feature-description","title":"Feature description","text":"<p>This feature helps you monitor your Google Tag Manager (GTM) tagging servers on Google Cloud Platform (GCP) using the Cloud Run service. It ensures that your servers stay healthy, secure, and running smoothly. It automatically sets up monitoring rules in your GCP project, such as checking memory and CPU usage, verifying SSL certificates, and making sure your servers are always up and running. This allows you to keep an eye on your tagging servers and make sure they are working properly.</p> <p>The main goal of this feature is to keep your tagging servers reliable so your data collection is uninterrupted. This way, you can focus on analyzing and improving your marketing campaigns without worrying abut technical problems. If anything goes wrong, you\u2019ll be notified right away through your preferred method, whether by email or Slack. This helps you quickly fix any issues that is detected to make sure your GTM server continues to provide the data you need.</p>"},{"location":"tag-monitor/cloud-run-monitoring/#how-it-works","title":"How it works","text":"<p>To get started with this monitoring feature, you'll first need to provide us with a service account key from your GCP project. This key should have the necessary permissions to create and manage resources within your project. The instructions of how to create the service account key and the necessary permissions are explained in further steps.</p> <p>The setup involves configuring a comprehensive set of alert policies to monitor the performance and health of your Cloud Run services. These policies include tracking CPU and memory usage to ensure your services are operating efficiently, performing uptime checks to verify continuous service availability, and monitoring SSL certificate expiration to maintain security. Additionally, a Pub/Sub topic is configured along with a corresponding subscription that receives messages from the notification channels defined in the alert policies. These messages are then forwarded to a Cloud Function within our GCP project, enabling efficient handling and routing of notifications. This setup ensures that any issues are promptly detected and addressed, maintaining the reliability and security of your services.</p> <p>Additionally, we will set up a service account specifically for monitoring with the necessary IAM roles to manage and access these resources.</p> <p>Once everything is in place, the monitoring system will actively keep an eye on your Cloud Run services. If any issues arise, you will receive notifications through your preferred channels, such as email or Slack, so you can quickly address any problems and ensure your tagging infrastructure remains reliable.</p>"},{"location":"tag-monitor/cloud-run-monitoring/#GCP-respurces","title":"Resources Created in your GCP project","text":"<ol> <li>Notification Channel<ul> <li>A notification channel linked to the alert policies that pushes messages to a pub/sub topic in your project.</li> </ul> </li> <li>Pub/Sub Topic and Subscription <ul> <li>A Pub/Sub topic that receives the alert messages from the notification channel used in the alert policies.</li> <li>A Pub/Sub subscription with push configuration for Cloud Functions.</li> </ul> </li> <li>Alert Policies<ul> <li>CPU Alert Policy: Monitors CPU utilization of Cloud Run services.</li> <li>Memory Alert Policy: Monitors memory utilization of Cloud Run services.</li> <li>Uptime Check Alert Policy: Ensures Cloud Run services are up and running.</li> <li>SSL Certificate Expiration Alert Policy: Monitors SSL certificate expiration.</li> </ul> </li> <li>Service Account<ul> <li>A service account named <code>cloud-run-monitoring@{project_id}.iam.gserviceaccount.com</code> with <code>Pub/Sub Publisher</code> role.</li> </ul> </li> </ol>"},{"location":"tag-monitor/cloud-run-monitoring/#how-to-enable-cloud-run-monitoring","title":"How to Enable Cloud Run Monitoring","text":"<p>To enable the feature you need to take the steps below:</p> <ol> <li>Navigate to the Configuration Page:<ul> <li>Go to the Tag Monitor Configuration Page on our portal.</li> </ul> </li> <li>Access the Monitoring Tab:<ul> <li>Click on the <code>Monitoring via Google Cloud Platform</code> tab.                           </li> </ul> </li> <li>Enable Cloud Run Monitoring:<ul> <li>Turn on the toggle for Cloud Run monitoring.                  </li> </ul> </li> <li>Enter Project Information:<ul> <li>In the project number field, enter your GCP project number.      Where to find your project number? </li> </ul> </li> <li>Upload Service Account Key:<ul> <li>Upload your service account key.              How to create the service account key?</li> <li>Note: This service account key will not be stored in any of our systems for privacy and security purposes. Find more about  the security Measures and Implementation safeguards here.  </li> </ul> </li> <li>Provide Cloud Run Details:<ul> <li>Enter the name and the region of your Cloud Run resources for your tagging service.              How to find the Cloud Run Details </li> </ul> </li> <li> <p>Start Configuration:</p> <ul> <li>Click on <code>Start Configuration</code> to initiate the process.             </li> </ul> </li> <li> <p>Confirm the implementation:</p> <ul> <li>Once the following message appears on your screen, you can confirm that the implementation was successful.                  </li> </ul> </li> <li>Enable the notifications      Set up your preferred notification methods (e.g., email or Slack) to receive alerts when an event occurs. </li> </ol>"},{"location":"tag-monitor/cloud-run-monitoring/#find-project-number","title":"How to Find Your GCP Project Number","text":"<ol> <li>Log in to the Google Cloud Console:<ul> <li>Visit Google Cloud Console.</li> <li>Sign in with your Google account if you're not already logged in.</li> </ul> </li> <li> <p>Select Your Project:</p> <ul> <li>In the top navigation bar, click on the project drop-down menu (typically displaying the name of your currently selected project).</li> <li>If you have multiple projects, select the one you want from the list.</li> </ul> </li> <li> <p>Locate the Project Number:</p> <ul> <li>After selecting your project, the Project Info panel will appear on the dashboard.              </li> <li>Your Project number will be displayed in this panel, usually right below the project name.   </li> </ul> </li> </ol>"},{"location":"tag-monitor/cloud-run-monitoring/#create-service-account-key","title":"Creating a Service Account and Generating a Key","text":"<p>To enable the automation of monitoring and management processes, you need to create a Google Cloud Service Account with specific permissions. Follow these steps to create the service account, assign the necessary roles, and generate a service account key for upload to our portal.</p>"},{"location":"tag-monitor/cloud-run-monitoring/#step-1-create-a-service-account","title":"Step 1: Create a Service Account","text":"<ol> <li>Navigate to the Google Cloud Console<ul> <li>Open the Google Cloud Console.</li> </ul> </li> <li>Select Your Project:<ul> <li>Ensure you have the correct project selected from the project selector dropdown at the top of the page.</li> </ul> </li> <li>Go to the Service Accounts Page <ul> <li>Navigate to <code>IAM &amp; Admin</code> &gt; <code>Service Accounts</code>.                                         </li> </ul> </li> <li>Create a New Service Account<ul> <li>Click the <code>+ CREATE SERVICE ACCOUNT</code> button. </li> <li>Enter a name, ID, and description for the service account.</li> <li>Click <code>CREATE AND CONTINUE</code>.</li> <li>Copy the service account email into your clipboard for the next step.</li> </ul> </li> </ol>"},{"location":"tag-monitor/cloud-run-monitoring/#step-2-assign-roles-to-the-service-account","title":"Step 2: Assign Roles to the Service Account","text":"<ul> <li>Navigate to <code>IAM &amp; Admin</code> &gt; <code>IAM</code>.                    </li> <li>Click on <code>GRANT ACCESS</code> button.             </li> <li>Paste your service account email from the previous step into the <code>New principals</code> field.            </li> <li>Assign the following roles to the service account to grant it the necessary permissions:     </li> <li>Pub/Sub Admin:<ul> <li>Resource: <code>google_pubsub_topic</code></li> <li>Role: <code>roles/pubsub.admin</code></li> </ul> </li> <li>Monitoring Notification Channel Admin:<ul> <li>Resource: <code>google_monitoring_notification_channel</code></li> <li>Role: <code>roles/monitoring.notificationChannelAdmin</code></li> </ul> </li> <li>Monitoring Alert Policy Admin:<ul> <li>Resource: <code>google_monitoring_alert_policy</code></li> <li>Role: <code>roles/monitoring.alertPolicyAdmin</code></li> </ul> </li> <li>Service Account Admin:<ul> <li>Resources: <code>google_pubsub_topic_iam_member</code>, <code>google_project_iam_binding</code></li> <li>Role: <code>roles/iam.serviceAccountAdmin</code></li> </ul> </li> <li>Pub/Sub Admin:<ul> <li>Resource: <code>google_pubsub_subscription</code></li> <li>Role: <code>roles/pubsub.admin</code></li> </ul> </li> <li>Monitoring Uptime Check Admin:<ul> <li>Resource: <code>google_monitoring_uptime_check_config</code></li> <li>Role: <code>roles/monitoring.uptimeCheckAdmin</code></li> </ul> </li> <li>Logging Admin:<ul> <li>Resource: <code>google_logging_project_sink</code></li> <li>Role: <code>roles/logging.admin</code></li> </ul> </li> <li>Config Writer:<ul> <li>Resource: <code>google_logging_project_sink</code></li> <li>Role: <code>roles/config.writer</code></li> <li>After adding all the roles, click <code>DONE</code>.  </li> </ul> </li> </ul> <p>Note: You can set the owner role to grant all of the permissions mentioned above to the service account in one step. However, be aware that this will also grant full access to the service account.</p>"},{"location":"tag-monitor/cloud-run-monitoring/#step-3-create-and-download-the-service-account-key","title":"Step 3: Create and Download the Service Account Key","text":"<ol> <li>Generate a New Key:<ul> <li>In the <code>Service Accounts</code> page, find the service account you created.</li> <li>Click the <code>\u22ee</code> (three vertical dots) at the end of the service account row, then click <code>Manage keys</code>. </li> </ul> </li> <li>Add Key:<ul> <li>Click <code>ADD KEY</code> &gt; <code>Create new key</code>. </li> </ul> </li> <li>Select Key Type:<ul> <li>Choose the <code>JSON</code> key type and click <code>CREATE</code>. </li> </ul> </li> <li>Download Key:<ul> <li>The key will automatically download to your computer. Keep this file secure, as it contains the credentials required to access the service account.</li> </ul> </li> </ol>"},{"location":"tag-monitor/cloud-run-monitoring/#locate-cloud-run-resources","title":"Identifying Cloud Run Services and Their Regions","text":"<p>To manage and monitor your Cloud Run services, you need to know the name and region of each service used for your tagging service. Follow these steps to locate your Cloud Run services and identify their corresponding names and regions.</p>"},{"location":"tag-monitor/cloud-run-monitoring/#step-1-navigate-to-the-cloud-run-console","title":"Step 1: Navigate to the Cloud Run Console","text":"<ol> <li>Open the Google Cloud Console:<ul> <li>Go to the Google Cloud Console.</li> </ul> </li> <li>Select Your Project:<ul> <li>Ensure you have the correct project selected from the project selector dropdown at the top of the page.</li> </ul> </li> <li>Access Cloud Run:<ul> <li>From the navigation menu, go to <code>Cloud Run</code> under the <code>Serverless</code> section. </li> </ul> </li> </ol>"},{"location":"tag-monitor/cloud-run-monitoring/#step-2-view-cloud-run-services","title":"Step 2: View Cloud Run Services","text":"<ol> <li>List of Services:<ul> <li>On the Cloud Run page, you will see a list of all Cloud Run services deployed in your project.</li> </ul> </li> <li>Service Details:<ul> <li>Each row in the list represents a Cloud Run service. The primary details displayed include:<ul> <li>Service Name: The name of the Cloud Run service.</li> <li>Region: The region where the service is deployed. </li> </ul> </li> </ul> </li> </ol>"},{"location":"tag-monitor/cloud-run-monitoring/#step-3-identify-service-name-and-region","title":"Step 3: Identify Service Name and Region","text":"<ol> <li>Service Name:<ul> <li>The service name is displayed in the <code>Service</code> column. This is the identifier you use to manage and reference the service within your project.</li> </ul> </li> <li>Region:<ul> <li>The region is displayed in the <code>Region</code> column. This indicates the geographical location where the service is deployed, which is crucial for understanding latency and data residency.</li> </ul> </li> </ol> <p>By following these steps, you will be able to easily locate all Cloud Run services within your project and identify their names and regions needed for the implementation.</p>"},{"location":"tag-monitor/cloud-run-monitoring/#security-measures-and-implementation-safeguards","title":"Security Measures and Implementation Safeguards","text":"<p>Our implementation process is built around a strong security framework that safeguards user data and blocks unauthorized access. Here's how we maintain top-level security throughout the process:</p> <ol> <li>One-Time Use of Service Account Key:<ul> <li>We keep your service account key secure by using it only once. The service account key, necessary for implementation, is never stored in our databases. This means that after the initial implementation, the key is discarded. Should you need to update your setup, you will be required to upload the key again. This approach eliminates any potential vulnerabilities associated with key storage.</li> </ul> </li> <li>Strict Separation of Front-End and Back-End Processing:<ul> <li>To minimize risk, the service account key file is never handled on the front-end. Instead, when you upload the key, it is sent as a binary file via secure HTTPS requests directly to our servers. By processing the key exclusively on the back-end, we prevent any exposure of sensitive information in the front-end environment, adding an extra layer of protection against potential security breaches.</li> </ul> </li> <li>No Credentials Stored:<ul> <li>In the event of a security breach, your credentials remain safe. Since we do not store the service account key or any sensitive credentials in our system, even a successful hack would yield no access to your Google Cloud resources. This ensures that your data and accounts remain secure, regardless of external threats.</li> </ul> </li> <li>Limited Scope of Resource Creation:<ul> <li>Our implementation is highly targeted and precise. We only create the resources explicitly required for the project within your Google Cloud environment, and nothing more. This controlled and minimalistic approach ensures that there are no unnecessary permissions or resources that could be exploited, further tightening security.           See the list of resources that will be created in your GCP project</li> </ul> </li> </ol> <p>By following these strict security practices, we secure your implementation, reducing risk and protecting your Google Cloud environment.</p>"},{"location":"tag-monitor/cloud-run-monitoring/#next-steps","title":"Next Steps","text":"<p>Enable Notification Methods  Set up your preferred notification methods (e.g., email or Slack) to receive alerts when an event occurs.  You can enable the notifications from Tag Monitor Configuration Page on  our portal.</p>"},{"location":"tag-monitor/consent-monitoring/","title":"Enable Consent Monitoring","text":"<p>\u26a0\ufe0f This feauture is only available for the Tag Monitor Premium, Enterprise or Agency licenses.</p>"},{"location":"tag-monitor/consent-monitoring/#changes-in-google-tag-manager","title":"Changes in Google Tag Manager","text":""},{"location":"tag-monitor/consent-monitoring/#retrieve-variables-to-retrieve-the-consent-status","title":"Retrieve variables to retrieve the consent status","text":"<ol> <li> <p>Install the variable template 'GTM Consent State' in your GTM container.</p> </li> <li> <p>Create new variables, one for each consent status to monitor. Often two variables for 'analytics_storage' and 'ad_storage' are enough.</p> </li> </ol>"},{"location":"tag-monitor/consent-monitoring/#add-parameters-to-the-tags-where-consent-should-be-monitored","title":"Add parameters to the tags where consent should be monitored.","text":"<ol> <li> <p>Google Analytics: Add a parameter value and key to every GA4 event (tip: add these parameters via a standard 'Event settings variable'). </p> </li> <li> <p>The parameter name should be 'consent_ad_storage' or 'consent_analytics_storage'.</p> </li> <li> <p>The parameter value should be the matching variables that you've just added to the container.</p> </li> <li> <p>Google Ads: In the Remarketing tag custom parameters can be added via the option 'Manually Specify'</p> </li> <li> <p>The parameter key should be 'consent_ad_storage' or 'consent_analytics_storage'.</p> </li> <li> <p>The parameter value should be the matching variables that you've just added to the container.</p> </li> <li> <p>Microsoft Ads: All event tracking tags give the opportunity to add extra event data via the table option. </p> </li> <li> <p>The name should be 'consent_ad_storage' or 'consent_analytics_storage'.</p> </li> <li>The value should be the matching variables that you've just added to the container.</li> </ol>"},{"location":"tag-monitor/consent-monitoring/#link-the-tags-and-parameters-to-the-code-cube-tag-monitor-template","title":"Link the tags and parameters to the Code Cube Tag Monitor template.","text":"<ol> <li>When you open a tag in a new tab, the Tag ID will be available in the url, after /tags/. For example, 4175 is the tag ID in the example URL below.</li> </ol> <p>https://tagmanager.google.com/#/container/accounts/112031/containers/126673/workspaces/1000716/tags/4175</p> <ol> <li>In the Code Cube Tag Monitor tag (premium template) add the list of tag ID's with the consent variable and the given label (consent_analytics_storaga) for example.</li> </ol>"},{"location":"tag-monitor/debugging-errors/","title":"Debugging errors in the Tag Monitor","text":"<p>These guidelines are constantly updated based on best practices we find along the way. Do you have any specific findings? Please help us get these docs as complete as possible.</p> <p>Before diving into the specifics, there are some tips on debugging Tag Manager errors in general:</p> <ol> <li>Check which container version gave the error. Google Tag Manager has quite a thorough cache and therefore some older container versions might still give errors as these versions are some quite persistent.</li> <li>Check when the error started; did a change take place in tracking around that time?</li> <li>Analyse on which page the error was encountered. Is there a specific page or page type that triggers the error?</li> </ol>"},{"location":"tag-monitor/debugging-errors/#google-tag-manager-client-side","title":"Google Tag Manager client-side","text":"<p>Below some tips and tricks on debugging errors in your Google Tag Manager client-side environment. In most cases debugging errors in your client-side container is trial and error, but these tips might help you along the way.</p> <p>For more specific insights on the Code Cube errors you can enable the BigQuery offload (premium+ feature). Please contact us if you require more information.</p>"},{"location":"tag-monitor/debugging-errors/#microsoft-ads","title":"Microsoft Ads","text":"<ol> <li> <p>Make sure the \u2018UET config\u2019 tag is installed and fires on every page.</p> </li> <li> <p>Make sure to add the right variable for the parameter \u2018UETQ variable ID\u2019. This is for example \u2018uetq\u2019.</p> </li> <li> <p>Make sure Microsoft Consent Mode has been configured correctly.</p> </li> </ol>"},{"location":"tag-monitor/debugging-errors/#linkedin-insight","title":"LinkedIn Insight","text":"<ol> <li>The LinkedIn tag gives an error when you try to fire the event before a consent update has been send. Try and send it a bit later.</li> </ol>"},{"location":"tag-monitor/debugging-errors/#google-tag-manager-server-side","title":"Google Tag Manager server-side","text":"<p>Below some tips and tricks on debugging errors in your Google Tag Manager server-side environment. </p> <p>GTM server-side container gives more insights on the errors than the client-side container. Do you encounter a high percentage of failed tags (+ 75%)? Make sure to open the preview mode and look into the tab \u2018Console\u2019. The chances are quite high more information on the specific error can be found here.</p> <p>For more specific insights on the Code Cube errors you can enable the BigQuery offload (premium+ feature) or retrieve detailed insights via the server-side error logs (premium+ feature). Please contact us if you require more information.</p>"},{"location":"tag-monitor/debugging-errors/#general-tips","title":"General tips","text":"<ol> <li>Use the trigger type \u2018Custom\u2019 as little as possible. This one is to generic and therefore causes quite often a lot of triggers.<ul> <li>Do you want to fire on all events? It is better to use trigger type \u2018Custom Event\u2019 with a wildcard.</li> </ul> </li> <li>Check if the client handling the event is implemented correctly.</li> </ol>"},{"location":"tag-monitor/debugging-errors/#google-ads","title":"Google Ads","text":"<ol> <li>Conversion Linker failing? Make sure the region specific settings are added in your server-side instance (Cloud Run for example).</li> </ol>"},{"location":"tag-monitor/debugging-errors/#facebook-conversion-api","title":"Facebook Conversion API","text":"<ol> <li>Facebook is very strict on all event parameters. When a Facebook tag fails, this is mostly caused by an event parameter not having the right value. <ul> <li>Using a variable to fill in the value of the event parameter? Make sure to always at a default value to send.</li> </ul> </li> <li>Check the trigger added to the tag. Is the trigger specific enough? It might be the trigger fires on events where you don\u2019t want it to fire, so it can\u2019t fill in all parameters and throw an error.<ol> <li>Make sure to also check our general tips on setting up triggers in the server-side environment.</li> </ol> </li> </ol>"},{"location":"tag-monitor/debugging-errors/#tiktok-conversion-api","title":"TikTok Conversion API","text":"<ol> <li>TikTok is very strict on all event parameters. When a TikTOk tag fails, this is mostly caused by an event parameter not having the right value. <ul> <li>Using a variable to fill in the value of the event parameter? Make sure to always at a default value to send.</li> </ul> </li> </ol>"},{"location":"tag-monitor/debugging-errors/#criteo","title":"Criteo","text":"<ol> <li>Make sure to check if all parameters are configured correctly. <ul> <li>Using a variable to fill in the value of the event parameter? Make sure to always at a default value to send.</li> </ul> </li> </ol>"},{"location":"tag-monitor/error-monitoring-client-side/","title":"Setting up the Tag Monitor: client-side Google Tag Manager","text":"<p>This guide will walk you through the steps to set up the Tag Monitor for your Google Tag Manager client-side container. Make sure to finalize the configuration on step product settings on the Tag Monitor configuration page first, before starting on these steps.</p> <p>A couple of steps are required, which will all be discussed below.</p> <ol> <li>Import Code Cube template in Google Tag Manager</li> <li>Configure Code Cube's Tag Monitor tag</li> <li>Add trigger to monitor the right set of events</li> <li>Include metadata 'tag name' to all other tags in the container</li> </ol>"},{"location":"tag-monitor/error-monitoring-client-side/#import-code-cube-template-in-google-tag-manager","title":"Import Code Cube template in Google Tag Manager","text":"<p>Download Tag Monitor template from Code Cube portal </p> <p>Download Code Cube's Tag Monitor template via the Tag Monitor configuration page, to be found in the step 'Client-side monitoring'.</p> <p>A seperate template is available for premium, enterprise and agency clients. Please get in contact with support@code-cube.io for more information.</p> <p></p> <p>Add template to Google Tag Manager container </p> <p>Open your Google Tag Manager client-side container. Navigate to \"Templates\", click in the \"Tag Templates\" section on the button \"New\".</p> <p></p> <p>Import the Tag Monitor template</p> <p>Import the template you've just downloaded from the portal via 'Import' to be found via the three dots in the top right corner. You can save the template directly, no adjustments to the template are required.</p> <p></p> <p>We did send in a request to have the template added to the Community Template Gallery, we will update the documentation as soon as the template is available here.</p>"},{"location":"tag-monitor/error-monitoring-client-side/#configure-the-tag-monitor-tag","title":"Configure the Tag Monitor tag","text":"<p>Create a new tag in your container. Choose as tag type the Tag Monitor, which you've just imported in the previous step.</p> <p></p> <p>Within this tag, there are a couple settings to configure.</p> <p>Database Name</p> <p>Every client data is stored in it's own personal dataset. The value for your configuration can be found on the configuration page, in the step 'Client-side monitoring'.</p> <p>Add Metadata</p> <p>It is important that we exclude the Tag Monitor tag from monitoring. Therefore we need to set the following key / parameter via \"Additional Tag Meta\":</p> <pre><code> Key: `exclude`\n Parameter: `true`\n</code></pre> <p>Consent: </p> <p>Set to 'No additional consent required'.  </p> <p>See example of tag including all settings in image below.</p> <p> </p>"},{"location":"tag-monitor/error-monitoring-client-side/#add-trigger-to-monitor-the-right-set-of-events","title":"Add trigger to monitor the right set of events","text":"<p>The Tag Monitor should fire on all events, therefore we create a Custom Event trigger with the following settings:</p> <pre><code>Event name: .*\n\nenable \"use regex matching\"\n</code></pre> <p>Of course, you can customize the trigger following your own insights and requirements. This is our recommended set-up to monitor the all types of events in your container.</p> <p></p> <p>Create segment</p> <p>Adviced is to monitor only a certain segment of all events. Make sure the segment is big enough to output significantly results, but on the other hand minimize the impact on site performance. </p> <p>The segment will be created based on the built-in variable random number:</p> <ul> <li>Enable the built-in variable \"Random Number\" via \"Configure\" under Built-in Variables.</li> <li>Decide on the to monitor segment (it is adviced to start in most cased with 20%), use the table below as a reference.</li> <li>Add the rule to the trigger via 'Some custom events'.</li> </ul> <p>The maximum value of the random number is 2.147.483.647. </p> <p>To monitor a segment, you can take a percentage of this total number and fire the tag when the random number gives a value equal to or less then this given value. The value below can be taken as a reference.</p> segment of 0.5% random number ends on 10737418 segment of 5% random number ends on 107374182 segment of 10% random number ends on 1* segment of 20% random number less then or equal to 429496729 segment of 25% random number less then or equal to 536870911 segment of 50% random number less then or equal to 1073741823 <p>*exception as there is a 1/10 change the number ends on a number between 0 and 9.</p>"},{"location":"tag-monitor/error-monitoring-client-side/#include-metadata-tag-name-to-all-other-tags-in-the-container","title":"Include metadata 'tag name' to all other tags in the container","text":"<p>Update 'tag name' meta data in all tags</p> <p>For each tag, expand \"Advanced Settings\" and check the \"Include tag name\" checkbox under \"Additional Tag Metadata\". Set the key name to \"name\" as well.</p> <p>documentation to be added on bulk editting of tags</p> <p></p>"},{"location":"tag-monitor/error-monitoring-client-side/#enable-build-in-variables-container-id-and-container-version","title":"Enable build-in variables Container ID and Container version","text":"<p>Make sure to have the built-in variables Container ID and Container version enabled in your container. If these are not available yet in your variable overview, you can enable them via \"Configure\" under Built-in Variables.</p> <p></p>"},{"location":"tag-monitor/error-monitoring-client-side/#go-live-with-monitoring-in-google-tag-manager","title":"Go live with monitoring in Google Tag Manager","text":"<p>Publish the workspace in Google Tag Manager to your production environment. Verify if the implementation was succesfull by opening the dashboard in the Code Cube portal and see if data comes in.</p>"},{"location":"tag-monitor/error-monitoring-server-side/","title":"Google Tag Manager Server-Side: Configuring Tag Monitor","text":"<p>This guide will walk you through the steps to set up the Tag Monitor for your Google Tag Manager server-side container. Make sure to finalize the configuration on step product settings on the Tag Monitor configuration page first, before starting on these steps.</p> <p>A couple of steps are required, which will all be discussed below.</p> <ol> <li>Import Code Cube template in Google Tag Manager</li> <li>Configure Code Cube's Tag Monitor tag</li> <li>Add trigger to monitor the right set of events</li> <li>Include metadata 'tag name' to all other tags in the container</li> </ol>"},{"location":"tag-monitor/error-monitoring-server-side/#import-code-cube-template-in-google-tag-manager","title":"Import Code Cube template in Google Tag Manager","text":"<p>Download Tag Monitor template from Code Cube portal </p> <p>Download Code Cube's Tag Monitor template via the Tag Monitor configuration page, to be found in the step 'Server-side monitoring'.</p> <p>A seperate template is available for premium, enterprise and agency clients. Please get in contact with support@code-cube.io for more information.</p> <p></p> <p>Add template to Google Tag Manager container </p> <p>Open your Google Tag Manager server-side container. Navigate to \"Templates\", click in the \"Tag Templates\" section on the button \"New\".</p> <p></p> <p>Import the Tag Monitor template</p> <p>Import the template you've just downloaded from the portal via 'Import' to be found via the three dots in the top right corner. You can save the template directly, no adjustments to the template are required.</p> <p></p> <p>We did send in a request to have the template added to the Community Template Gallery, we will update the documentation as soon as the template is available here.</p>"},{"location":"tag-monitor/error-monitoring-server-side/#configure-the-tag-monitor-tag","title":"Configure the Tag Monitor tag","text":"<p>Create a new tag in your container. Choose as tag type the Tag Monitor, which you've just imported in the previous step.</p> <p></p> <p>Within this tag, there are a couple settings to configure.</p> <p>Database Name / Dataset ID</p> <p>Every client data is stored in it's own personal dataset. The value for your configuration can be found on the configuration page, in the step 'Server-side monitoring' (field 'Database name'). </p> <p>Table Name / Table  ID</p> <p>In this field the constant value that should be added is \"raw_data_server\". The value can also be found on the configuration page, in the step 'Server-side monitoring' (field 'Table name'). </p> <p>Add Metadata</p> <p>It is important that we exclude the Tag Monitor tag from monitoring. Therefore we need to set the following key / parameter via \"Additional Tag Meta\":</p> <pre><code> Key: `exclude`\n Parameter: `true`\n</code></pre> <p> </p>"},{"location":"tag-monitor/error-monitoring-server-side/#add-trigger-to-monitor-the-right-set-of-events","title":"Add trigger to monitor the right set of events","text":"<p>The Tag Monitor should fire on all events, therefore we create a Custom Event trigger with the following settings:</p> <pre><code>Event name: .*\n\nenable \"use regex matching\"\n</code></pre> <p>Of course, you can customize the trigger following your own insights and requirements. This is our recommended set-up to monitor the all types of events in your container.</p> <p></p> <p>Create segment</p> <p>Adviced is to monitor only a certain segment of all events. Make sure the segment is big enough to output significantly results, but on the other hand minimize the impact on site performance. </p> <p>The segment will be created based on the built-in variable random number:</p> <ul> <li>Enable the built-in variable \"Random Number\" via \"Configure\" under Built-in Variables.</li> <li>Decide on the to monitor segment (it is adviced to start in most cased with 20%), use the table below as a reference.</li> <li>Add the rule to the trigger via 'Some custom events'.</li> </ul> <p>The maximum value of the random number is 2.147.483.647. </p> <p>To monitor a segment, you can take a percentage of this total number and fire the tag when the random number gives a value equal to or less then this given value. The value below can be taken as a reference.</p> segment of 0.5% random number ends on 10737418 segment of 5% random number ends on 107374182 segment of 10% random number ends on 1* segment of 20% random number less then or equal to 429496729 segment of 25% random number less then or equal to 536870911 segment of 50% random number less then or equal to 1073741823 <p>*exception as there is a 1/10 change the number ends on a number between 0 and 9.</p>"},{"location":"tag-monitor/error-monitoring-server-side/#include-metadata-tag-name-to-all-other-tags-in-the-container","title":"Include metadata 'tag name' to all other tags in the container","text":"<p>Update 'tag name' meta data in all tags</p> <p>For each tag, expand \"Advanced Settings\" and check the \"Include tag name\" checkbox under \"Additional Tag Metadata\". Set the key name to \"name\" as well.</p> <p>documentation to be added on bulk editting of tags</p> <p></p>"},{"location":"tag-monitor/error-monitoring-server-side/#enable-build-in-variables-container-id-and-container-version","title":"Enable build-in variables Container ID and Container version","text":"<p>Make sure to have the built-in variables Container ID and Container version enabled in your container. If these are not available yet in your variable overview, you can enable them via \"Configure\" under Built-in Variables.</p> <p></p>"},{"location":"tag-monitor/error-monitoring-server-side/#go-live-with-monitoring-in-google-tag-manager","title":"Go live with monitoring in Google Tag Manager","text":"<p>Publish the workspace in Google Tag Manager to your production environment. Verify if the implementation was succesfull by opening the dashboard in the Code Cube portal and see if data comes in.</p>"},{"location":"tag-monitor/introduction/","title":"Introduction","text":"1 of 2             2 of 2             1 of 2             2 of 2"},{"location":"tag-monitor/server-side-error-logging/","title":"Server-side error logging","text":""},{"location":"tag-monitor/server-side-error-logging/#feature-description","title":"Feature description","text":"<p>\u2755This feature is only available with the Tag Monitor's premium and enterprise licenses.</p> <p>Logs play an essential role in monitoring your server-side tagging. They assist in troubleshooting request issues, identifying missing data, and understanding how a vendor processed a request.</p> <p>Logs are available for all tags that support the \"logging to console\" option in the server-side GTM container. However, it's important to note that you can not retrieve log data for Google Analytics and Google Ads tags, as these default templates do not support the logging option.</p> <p>The logging will be configured in the Google Cloud Project where your GTM server-side container operates in a Cloud Run instance. From this instance, you can connect the logs to the Code Cube environment. These logs will then be paired with other error information and integrated into dashboarding and notifications.</p>"},{"location":"tag-monitor/server-side-error-logging/#how-it-works","title":"How it works","text":"<p>Our system works by setting up a log monitoring mechanism within your Google Cloud Project. It starts by configuring a router log that collects logs from your GTM server-side container, specifically targeting logs that meet certain criteria.</p> <p>The filtering logic is applied to ensure only relevant logs are captured, with the filter being: logName=~\"stdout\" AND textPayload!~\"https://www.googletagmanager.com/sgtm/a\" AND textPayload!~\"Listening\". </p> <p>Filter explanation: logName=~\"stdout\": Filter logs based on stdout. textPayload!~\"https://www.googletagmanager.com/sgtm/a\": Exclude GTM analytics pings. textPayload!~\"Listening\": Excludes instance initializations.</p> <p>Once the relevant logs are collected, they are sent to a dataset in our Google Cloud Project. This dataset serves as a repository for the logs, which can then be used to create insights, create dashboards, and track various metrics.</p>"},{"location":"tag-monitor/server-side-error-logging/#GCP-respurces","title":"Resources Created in your GCP project","text":"<ol> <li>Logging Sink<ul> <li>A logging sink named codecube-serverside-logs routing logs to BigQuery dataset in our GCP project.</li> </ul> </li> </ol>"},{"location":"tag-monitor/server-side-error-logging/#how-to-enable-server-side-error-logging","title":"How to Enable server-side error logging","text":"<p>To enable the feature you need to take the steps below:</p> <ol> <li>Navigate to the Configuration Page:<ul> <li>Go to the Tag Monitor Configuration Page on our portal.</li> </ul> </li> <li>Access the Monitoring Tab:<ul> <li>Click on the <code>Monitoring via Google Cloud Platform</code> tab.                           </li> </ul> </li> <li>Enable server-side error logging:<ul> <li>Turn on the toggle for server-side error logging.                  </li> </ul> </li> <li>Upload Service Account Key:<ul> <li>Upload your service account key.              How to create the service account key?</li> <li>Note: This service account key will not be stored in any of our systems for privacy and security purposes.  Find more about      the security Measures and Implementation safeguards here.                    </li> </ul> </li> <li> <p>Start Configuration:</p> <ul> <li>Click on <code>Start Configuration</code> to initiate the process.             </li> </ul> </li> <li> <p>Confirm the implementation:</p> <ul> <li>Once the following message appears on your screen, you can confirm that the implementation was successful.                  </li> </ul> </li> </ol>"},{"location":"tag-monitor/server-side-error-logging/#create-service-account-key","title":"Creating a Service Account and Generating a Key","text":"<p>To enable the automation of monitoring and management processes, you need to create a Google Cloud Service Account with specific permissions. Follow these steps to create the service account, assign the necessary roles, and generate a service account key for upload to our portal.</p>"},{"location":"tag-monitor/server-side-error-logging/#step-1-create-a-service-account","title":"Step 1: Create a Service Account","text":"<ol> <li>Navigate to the Google Cloud Console<ul> <li>Open the Google Cloud Console.</li> </ul> </li> <li>Select Your Project:<ul> <li>Ensure you have the correct project selected from the project selector dropdown at the top of the page.</li> </ul> </li> <li>Go to the Service Accounts Page <ul> <li>Navigate to <code>IAM &amp; Admin</code> &gt; <code>Service Accounts</code>.                                         </li> </ul> </li> <li>Create a New Service Account<ul> <li>Click the <code>+ CREATE SERVICE ACCOUNT</code> button. </li> <li>Enter a name, ID, and description for the service account.</li> <li>Click <code>CREATE AND CONTINUE</code>.</li> <li>Copy the service account email into your clipboard for the next step.</li> </ul> </li> </ol>"},{"location":"tag-monitor/server-side-error-logging/#step-2-assign-roles-to-the-service-account","title":"Step 2: Assign Roles to the Service Account","text":"<ul> <li>Navigate to <code>IAM &amp; Admin</code> &gt; <code>IAM</code>.                    </li> <li>Click on <code>GRANT ACCESS</code> button.             </li> <li>Paste your service account email from the previous step into the <code>New principals</code> field.            </li> <li> <p>Assign the following roles to the service account to grant it the necessary permissions:     </p> </li> <li> <p>Logging Admin:</p> <ul> <li>Resource: <code>google_logging_project_sink</code></li> <li>Role: <code>roles/logging.admin</code></li> </ul> </li> <li>Config Writer:<ul> <li>Resource: <code>google_logging_project_sink</code></li> <li>Role: <code>roles/config.writer</code></li> <li>After adding all the roles, click <code>DONE</code>.  </li> </ul> </li> </ul> <p>Note: You can set the owner role to grant all of the permissions mentioned above to the service account in one step. However, be aware that this will also grant full access to the service account.</p>"},{"location":"tag-monitor/server-side-error-logging/#step-3-create-and-download-the-service-account-key","title":"Step 3: Create and Download the Service Account Key","text":"<ol> <li>Generate a New Key:<ul> <li>In the <code>Service Accounts</code> page, find the service account you created.</li> <li>Click the <code>\u22ee</code> (three vertical dots) at the end of the service account row, then click <code>Manage keys</code>. </li> </ul> </li> <li>Add Key:<ul> <li>Click <code>ADD KEY</code> &gt; <code>Create new key</code>. </li> </ul> </li> <li>Select Key Type:<ul> <li>Choose the <code>JSON</code> key type and click <code>CREATE</code>. </li> </ul> </li> <li>Download Key:<ul> <li>The key will automatically download to your computer. Keep this file secure, as it contains the credentials required to access the service account.</li> </ul> </li> </ol>"},{"location":"tag-monitor/server-side-error-logging/#security-measures-and-implementation-safeguards","title":"Security Measures and Implementation Safeguards","text":"<p>Our implementation process is built around a strong security framework that safeguards user data and blocks unauthorized access. Here's how we maintain top-level security throughout the process:</p> <ol> <li>One-Time Use of Service Account Key:<ul> <li>We keep your service account key secure by using it only once. The service account key, necessary for implementation, is never stored in our databases. This means that after the initial implementation, the key is discarded. Should you need to update your setup, you will be required to upload the key again. This approach eliminates any potential vulnerabilities associated with key storage.</li> </ul> </li> <li>Strict Separation of Front-End and Back-End Processing:<ul> <li>To minimize risk, the service account key file is never handled on the front-end. Instead, when you upload the key, it is sent as a binary file via secure HTTPS requests directly to our servers. By processing the key exclusively on the back-end, we prevent any exposure of sensitive information in the front-end environment, adding an extra layer of protection against potential security breaches.</li> </ul> </li> <li>No Credentials Stored:<ul> <li>In the event of a security breach, your credentials remain safe. Since we do not store the service account key or any sensitive credentials in our system, even a successful hack would yield no access to your Google Cloud resources. This ensures that your data and accounts remain secure, regardless of external threats.</li> </ul> </li> <li>Limited Scope of Resource Creation:<ul> <li>Our implementation is highly targeted and precise. We only create the resources explicitly required for the project within your Google Cloud environment, and nothing more. This controlled and minimalistic approach ensures that there are no unnecessary permissions or resources that could be exploited, further tightening security.           See the list of resources that will be created in your GCP project</li> </ul> </li> </ol> <p>By following these strict security practices, we secure your implementation, reducing risk and protecting your Google Cloud environment.</p>"},{"location":"tag-monitor/tag-bulk-edit/","title":"Tag Bulk Edit","text":""},{"location":"tag-monitor/tag-bulk-edit/#update-all-your-tags-to-include-the-tag-name-in-the-metadata","title":"Update all your tags to include the tag name in the metadata","text":"<p>To effectively monitor your tags and ensure they include necessary metadata, follow these comprehensive steps to configure your client-side Tag Manager container.</p>"},{"location":"tag-monitor/tag-bulk-edit/#step-by-step-implementation-guide","title":"Step-by-Step Implementation Guide","text":""},{"location":"tag-monitor/tag-bulk-edit/#step-1-access-the-tag-monitor-configuration-page","title":"Step 1: Access the Tag Monitor Configuration Page","text":"<p>Begin by navigating to the Tag Monitor configuration page on the Code Cube portal. This is the starting point for setting up your tag monitoring and editing configuration.</p>"},{"location":"tag-monitor/tag-bulk-edit/#step-2-select-the-error-monitoring-tab","title":"Step 2: Select the Error Monitoring Tab","text":"<p>Once on the configuration page, you will see different tabs for various monitoring options. Click on either the \"Client-side\" or \"Server-side error monitoring\" tab, depending on your needs.                           </p>"},{"location":"tag-monitor/tag-bulk-edit/#step-3-locate-the-bulk-editing-tag-names-section","title":"Step 3: Locate the Bulk Editing Tag Names Section","text":"<p>Scroll down to find the section labeled \"Bulk editing tag names.\" This section is crucial for updating your tags. Click the \"Start bulk editing\" button to initiate the process.                                      </p>"},{"location":"tag-monitor/tag-bulk-edit/#step-4-authenticate-with-google-tag-manager","title":"Step 4: Authenticate with Google Tag Manager","text":"<p>If this is your first time using the Code Cube app to access your Google Tag Manager account, you will need to authenticate. Click the \"Start authentication\" button. This will open a Google authentication window where you must authorize the app.  </p>"},{"location":"tag-monitor/tag-bulk-edit/#step-5-select-your-google-tag-manager-account","title":"Step 5: Select Your Google Tag Manager Account","text":"<p>After authenticating, a list of your Google Tag Manager accounts will appear. Select the account that contains the container you want to update. </p>"},{"location":"tag-monitor/tag-bulk-edit/#step-6-choose-the-container-to-update","title":"Step 6: Choose the Container to Update","text":"<p>Next, choose the specific container from the list of containers within your selected account. Ensure you select the correct container as this is where the updates will be applied.                      </p>"},{"location":"tag-monitor/tag-bulk-edit/#step-7-run-the-update","title":"Step 7: Run the Update","text":"<p>With the container selected, click the \"Run update\" button. This will initiate the bulk editing process where your tags will be updated to include the tag names in their metadata.                     </p>"},{"location":"tag-monitor/tag-bulk-edit/#step-8-publish-the-changes","title":"Step 8: Publish the Changes","text":"<p>After the update process completes, a confirmation message will appear at the bottom of the page. To finalize the changes, navigate to the container in your Google Tag Manager account. Locate the newly generated workspace named \"Code Cube\" and publish the changes.                  </p>"},{"location":"tag-monitor/tag-bulk-edit/#conclusion","title":"Conclusion","text":"<p>Congratulations! You have successfully updated all your tags to include the tag name in the metadata within your container. This update ensures better monitoring and management of your tags in Google Tag Manager. If you encounter any issues or need further assistance,please contact support at support@code-cube.io.</p>"},{"location":"tag-monitor/tag-inactivity/","title":"Tag Inactivity Monitoring","text":""},{"location":"tag-monitor/tag-inactivity/#product-description","title":"Product Description","text":"<p>Tag Inactivity Monitoring is a solution designed to help users monitor important tags, such as conversion tags, and receive timely notifications when the tag does not fire for more than an hour. This solution is useful for ensuring that critical tags are working properly, and for quickly identifying issues that may be impacting business operations.</p> <p>The Tag Inactivity Monitoring solution sends notifications to users via email or Slack, informing them that the tag has not fired and providing details on the last time the tag was fired. This allows users to easily spot and troubleshoot the issue. The solution is available for use from 8:00 AM to 8:00 PM, making it an ideal tool for businesses that operate during regular business hours.</p> <p>Overall, the Tag Inactivity Monitoring solution provides an easy-to-use, convenient way for businesses to monitor critical tags and quickly identify issues that may be impacting their operations.</p>"},{"location":"tag-monitor/tag-inactivity/#implementation","title":"Implementation","text":"<p>To implement the Tag Inactivity Monitoring solution, users must fill out a configuration form on the Code Cube portal. Once the form is submitted, we will take care of the rest, setting up the solution to monitor the specified tag and sending notifications as needed.</p>"},{"location":"tag-monitor/tag-inactivity/#configuring-error-monitoring-notifications","title":"Configuring Error Monitoring Notifications","text":"<p>Follow the steps here to enable notifications for Tag Inactivity.</p>"}]}